From 3392d49b99c8d594af54549a41c962c46e26d7fd Mon Sep 17 00:00:00 2001
From: Andrew Beekhof <andrew@beekhof.net>
Date: Fri, 25 Aug 2017 12:46:37 +1000
Subject: [PATCH] PE: bundle: Send an additional host list when
 container-attribute-target=host

The list is modified to use the name of the host where the bundles are
running so that agents can map between the two sets when necessary.
---
 lib/pengine/container.c |  1 +
 pengine/clone.c         |  8 +++---
 pengine/notif.c         | 68 ++++++++++++++++++++++++++++++++++++++-----------
 pengine/notif.h         |  2 +-
 4 files changed, 59 insertions(+), 20 deletions(-)

diff --git a/lib/pengine/container.c b/lib/pengine/container.c
index 53965cf..5831b58 100644
--- a/lib/pengine/container.c
+++ b/lib/pengine/container.c
@@ -747,6 +747,7 @@ container_unpack(resource_t * rsc, pe_working_set_t * data_set)
          container_data->docker_host_options = buffer;
          if(container_data->attribute_target) {
              g_hash_table_replace(rsc->meta, strdup(XML_RSC_ATTR_TARGET), strdup(container_data->attribute_target));
+             g_hash_table_replace(container_data->child->meta, strdup(XML_RSC_ATTR_TARGET), strdup(container_data->attribute_target));
          }
 
     } else {
diff --git a/pengine/clone.c b/pengine/clone.c
index 1722166..41cb5cb 100644
--- a/pengine/clone.c
+++ b/pengine/clone.c
@@ -1227,25 +1227,25 @@ clone_expand(resource_t * rsc, pe_working_set_t * data_set)
 
     if (clone_data->start_notify) {
         collect_notification_data(rsc, TRUE, TRUE, clone_data->start_notify);
-        expand_notification_data(clone_data->start_notify, data_set);
+        expand_notification_data(rsc, clone_data->start_notify, data_set);
         create_notifications(rsc, clone_data->start_notify, data_set);
     }
 
     if (clone_data->stop_notify) {
         collect_notification_data(rsc, TRUE, TRUE, clone_data->stop_notify);
-        expand_notification_data(clone_data->stop_notify, data_set);
+        expand_notification_data(rsc, clone_data->stop_notify, data_set);
         create_notifications(rsc, clone_data->stop_notify, data_set);
     }
 
     if (clone_data->promote_notify) {
         collect_notification_data(rsc, TRUE, TRUE, clone_data->promote_notify);
-        expand_notification_data(clone_data->promote_notify, data_set);
+        expand_notification_data(rsc, clone_data->promote_notify, data_set);
         create_notifications(rsc, clone_data->promote_notify, data_set);
     }
 
     if (clone_data->demote_notify) {
         collect_notification_data(rsc, TRUE, TRUE, clone_data->demote_notify);
-        expand_notification_data(clone_data->demote_notify, data_set);
+        expand_notification_data(rsc, clone_data->demote_notify, data_set);
         create_notifications(rsc, clone_data->demote_notify, data_set);
     }
 
diff --git a/pengine/notif.c b/pengine/notif.c
index b8135b5..19a9751 100644
--- a/pengine/notif.c
+++ b/pengine/notif.c
@@ -17,6 +17,7 @@
  */
 
 #include <crm_internal.h>
+#include <crm/msg_xml.h>
 #include <allocate.h>
 #include <notif.h>
 #include <utils.h>
@@ -81,33 +82,60 @@ static notify_entry_t *dup_notify_entry(notify_entry_t *entry)
     return dup;
 }
 
-static char *
-expand_node_list(GListPtr list)
+static void
+expand_node_list(GListPtr list, char **uname, char **metal)
 {
     GListPtr gIter = NULL;
     char *node_list = NULL;
+    char *metal_list = NULL;
 
+    CRM_ASSERT(uname != NULL);
     if (list == NULL) {
-        return strdup(" ");
+        *uname = strdup(" ");
+        if(metal) {
+            *metal = strdup(" ");
+        }
+        return;
     }
 
     for (gIter = list; gIter != NULL; gIter = gIter->next) {
+        int len = 0;
+        int existing_len = 0;
         node_t *node = (node_t *) gIter->data;
 
-        if (node->details->uname) {
-            int existing_len = 0;
-            int len = 2 + strlen(node->details->uname);
+        CRM_ASSERT(node->details->uname);
+        len = 2 + strlen(node->details->uname);
+
+        if(node_list) {
+            existing_len = strlen(node_list);
+        }
+//            crm_trace("Adding %s (%dc) at offset %d", node->details->uname, len - 2, existing_len);
+        node_list = realloc_safe(node_list, len + existing_len);
+        sprintf(node_list + existing_len, "%s%s", existing_len == 0 ? "":" ", node->details->uname);
+
+        if(metal) {
+            existing_len = 0;
+            if(metal_list) {
+                existing_len = strlen(metal_list);
+            }
 
-            if(node_list) {
-                existing_len = strlen(node_list);
+            if(node->details->remote_rsc
+               && node->details->remote_rsc->container
+               && node->details->remote_rsc->container->running_on) {
+                node = node->details->remote_rsc->container->running_on->data;
             }
-            crm_trace("Adding %s (%dc) at offset %d", node->details->uname, len - 2, existing_len);
-            node_list = realloc_safe(node_list, len + existing_len);
-            sprintf(node_list + existing_len, "%s%s", existing_len == 0 ? "":" ", node->details->uname);
+
+            CRM_ASSERT(node->details->uname);
+            len = 2 + strlen(node->details->uname);
+            metal_list = realloc_safe(metal_list, len + existing_len);
+            sprintf(metal_list + existing_len, "%s%s", existing_len == 0 ? "":" ", node->details->uname);
         }
     }
 
-    return node_list;
+    *uname = node_list;
+    if(metal) {
+        *metal = metal_list;
+    }
 }
 
 static void
@@ -495,7 +523,7 @@ collect_notification_data(resource_t * rsc, gboolean state, gboolean activity,
 }
 
 gboolean
-expand_notification_data(notify_data_t * n_data, pe_working_set_t * data_set)
+expand_notification_data(resource_t *rsc, notify_data_t * n_data, pe_working_set_t * data_set)
 {
     /* Expand the notification entries into a key=value hashtable
      * This hashtable is later used in action2xml()
@@ -503,6 +531,7 @@ expand_notification_data(notify_data_t * n_data, pe_working_set_t * data_set)
     gboolean required = FALSE;
     char *rsc_list = NULL;
     char *node_list = NULL;
+    char *metal_list = NULL;
     GListPtr nodes = NULL;
 
     if (n_data->stop) {
@@ -576,13 +605,22 @@ expand_notification_data(notify_data_t * n_data, pe_working_set_t * data_set)
     g_hash_table_insert(n_data->keys, strdup("notify_inactive_resource"), rsc_list);
 
     nodes = g_hash_table_get_values(n_data->allowed_nodes);
-    node_list = expand_node_list(nodes);
+    expand_node_list(nodes, &node_list, NULL);
     g_hash_table_insert(n_data->keys, strdup("notify_available_uname"), node_list);
     g_list_free(nodes);
 
-    node_list = expand_node_list(data_set->nodes);
+    expand_node_list(data_set->nodes, &node_list, &metal_list);
     g_hash_table_insert(n_data->keys, strdup("notify_all_uname"), node_list);
 
+    {
+        const char *source = g_hash_table_lookup(rsc->meta, XML_RSC_ATTR_TARGET);
+        if(safe_str_eq("host", source)) {
+            g_hash_table_insert(n_data->keys, strdup("notify_all_hosts"), metal_list);
+        } else {
+            free(metal_list);
+        }
+    }
+
     if (required && n_data->pre) {
         update_action_flags(n_data->pre, pe_action_optional | pe_action_clear, __FUNCTION__, __LINE__);
         update_action_flags(n_data->pre_done, pe_action_optional | pe_action_clear, __FUNCTION__, __LINE__);
diff --git a/pengine/notif.h b/pengine/notif.h
index f299342..da68874 100644
--- a/pengine/notif.h
+++ b/pengine/notif.h
@@ -28,7 +28,7 @@ notify_data_t * create_notification_boundaries(resource_t *rsc,
 void collect_notification_data(resource_t *rsc, gboolean state,
                                gboolean activity, notify_data_t *n_data);
 
-gboolean expand_notification_data(notify_data_t *n_data,
+gboolean expand_notification_data(resource_t *rsc, notify_data_t *n_data,
                                   pe_working_set_t *data_set);
 
 void create_notifications(resource_t *rsc, notify_data_t *n_data,
-- 
2.5.5

